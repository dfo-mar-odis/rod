% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/data_getters.R
\name{get_shp_res}
\alias{get_shp_res}
\alias{get_gdb_res}
\alias{get_tif_res}
\alias{get_data_res}
\alias{get_esri_res}
\title{Read an open data record}
\usage{
get_shp_res(resUrl, crop_sf = NULL, crs = 4326)

get_gdb_res(resUrl, crop_sf = NULL, crs = 4326, gdbLayer = NULL)

get_tif_res(resUrl, crop_sf = NULL, crs = 4326, tifFile = NULL, getSf = FALSE)

get_data_res(resUrl, fileName = NULL, savePath = NULL)

get_esri_res(
  serverUrl,
  crop_sf = NULL,
  crs = 4326,
  esriLayer = NULL,
  esriWhere = "1=1"
)
}
\arguments{
\item{resUrl}{Url of the resource to download}

\item{crop_sf}{Sf object to crop the spatial data too}

\item{crs}{Coordinate reference system used for output sf}

\item{gdbLayer}{string name of layer to extract, if null all layers will be
extracted}

\item{tifFile}{string name of tif file to be extracted}

\item{getSf}{Boolean. If TRUE, function will return list of sf, may
SIGNIFICANTLY increase processing time and resources. Default is FALSE}

\item{fileName}{String name of file to save}

\item{savePath}{Full Path file should be saved to.}

\item{serverUrl}{Url of the map server to query}

\item{esriLayer}{String layer number of the layer to be extracted}

\item{esriWhere}{where clause to filter esri results}
}
\value{
An sf object

A named list of sfs object, named according to layer

A named list of stars/sf objects depending on getSf flag, named
according to filename.

Directory containing the downloaded files.

A  named list of sf objects, named according to their layer
}
\description{
These functions download and import open data spatial data based on a
resource id. The default data format for the output is an sf object, with
the option of cropping results to an input sf object.
}
\section{Functions}{
\itemize{
\item \code{get_shp_res}: 

\item \code{get_gdb_res}: 

\item \code{get_tif_res}: 

\item \code{get_data_res}: 

\item \code{get_esri_res}: 
}}

\section{After function section}{

Maybe details here?
}

\examples{
ckanr::ckanr_setup(url="https://open.canada.ca/data")
#res <- ckanr::resource_show("some-resource-id-1234")
#res_sf <- get_shp_res(res$url)

}
